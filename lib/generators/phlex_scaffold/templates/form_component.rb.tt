# frozen_string_literal: true

class Components::<%= class_name %>Form < Components::Base
  def initialize(<%= singular_table_name %>:)
    @<%= singular_table_name %> = <%= singular_table_name %>
  end

  def view_template(&)
    form_with(model: @<%= singular_table_name %>, class: "scaffold-form-container scaffold <%= singular_table_name %>-form", id: dom_id(@<%= singular_table_name %>, :form)) do |form|
      render_errors if @<%= singular_table_name %>.errors.any?
      
<% form_attributes.each do |attribute| -%>
<% if attribute.password_digest? -%>
      div(class: "scaffold-form-field-spacing") do
        form.label :password, class: "scaffold-label scaffold-form-field-spacing"
        form.password_field :password, 
                            class: input_classes(@<%= singular_table_name %>.errors[:password])
      end

      div(class: "scaffold-form-field-spacing") do
        form.label :password_confirmation, class: "scaffold-label scaffold-form-field-spacing"
        form.password_field :password_confirmation,
                            class: input_classes(@<%= singular_table_name %>.errors[:password_confirmation])
      end
<% elsif attribute.attachments? -%>
      div(class: "scaffold-form-field-spacing") do
        form.label :<%= attribute.column_name %>, class: "scaffold-label scaffold-form-field-spacing"
        form.<%= attribute.field_type %> :<%= attribute.column_name %>,
                                        multiple: true,
                                        class: input_classes(@<%= singular_table_name %>.errors[:<%= attribute.column_name %>])
      end
<% else -%>
      div(class: <%= attribute.field_type == :checkbox ? '"scaffold-form-field-spacing scaffold-form-field--checkbox"' : '"scaffold-form-field-spacing"' %>) do
        form.label :<%= attribute.column_name %>, class: "scaffold-label scaffold-form-field-spacing"
<% if attribute.field_type == :textarea || attribute.field_type == :text_area -%>
        form.<%= attribute.field_type %> :<%= attribute.column_name %>,
                                        rows: 4,
                                        class: input_classes(@<%= singular_table_name %>.errors[:<%= attribute.column_name %>])
<% elsif attribute.field_type == :checkbox || attribute.field_type == :check_box -%>
        form.<%= attribute.field_type %> :<%= attribute.column_name %>,
                                        class: checkbox_classes(@<%= singular_table_name %>.errors[:<%= attribute.column_name %>])
<% else -%>
        form.<%= attribute.field_type %> :<%= attribute.column_name %>,
                                        class: input_classes(@<%= singular_table_name %>.errors[:<%= attribute.column_name %>])
<% end -%>
      end
<% end -%>

<% end -%>
      div(class: "scaffold-inline-block") do
        form.submit class: "scaffold-button--primary scaffold-clickable"
      end
    end
  end

  private

  def render_errors
    div(id: "error_explanation", class: "scaffold-error-background scaffold-notice-spacing scaffold-error-title scaffold-rounded scaffold-form-field-spacing") do
      h2 { "#{pluralize(@<%= singular_table_name %>.errors.count, 'error')} prohibited this <%= singular_table_name %> from being saved:" }
      
      ul(class: "list-disc ml-6") do
        @<%= singular_table_name %>.errors.each do |error|
          li { error.full_message }
        end
      end
    end
  end

  def input_classes(errors)
    errors.any? ? "scaffold-input--error" : "scaffold-input"
  end

  def checkbox_classes(errors)
    errors.any? ? "scaffold-checkbox--error" : "scaffold-checkbox"
  end
end